# 2025-01-21

### 오늘의 목표
- 우테코 로또 구조 설계 및 기능 구현 정리

<br>

### 배운 것

-1.  domain과 model의 역할
    - domain:도메인 로직(비즈니스 로직)을 담고 있는 계층.
      프로그램에서 처리해야 할 핵심 데이터와 이를 조작하는 로직을 캡슐화.
      실제 비즈니스 요구사항을 코드로 구현하는 부분.
      
    - 예시:Lotto, Prize, Result 등 도메인에서 중요한 데이터와 관련된 클래스.
      로또의 번호 생성, 매칭 로직 등 핵심 비즈니스 로직을 포함.
  
    - model:데이터 표현 및 저장 역할.
      사용자가 입력하거나, 시스템에서 출력되는 데이터를 구조화하여 관리.
      
    - 예시:Lotto 클래스가 List<Integer> 형태로 로또 번호를 저장하거나 반환.

    ### Domain과 Model 비교
    
    | **특징**       | **Domain**                 | **Model**                   |
    |----------------|----------------------------|-----------------------------|
    | **주요 역할**   | 비즈니스 로직 구현          | 데이터 표현 및 관리           |
    | **포함 내용**   | 데이터와 이를 처리하는 메서드 | 데이터 필드, Getter/Setter |
    | **위치**       | 도메인 계층 (로직 중심)      | MVC의 `Model` 계층          |
    | **연관성**     | 데이터와 로직을 캡슐화한 객체 | 순수 데이터 구조체 역할도 가능 |

-2. enum은 Java에서 열거형(Enum)을 정의하는 키워드로, 고정된 상수들의 집합을 표현하는 데 사용됩니다. 
    enum은 주로 특정 값들만 가질 수 있는 데이터 타입을 정의하거나, 값들에 대한 추가 기능(메서드 등)을 제공하고자 할 때 사용됩니다.

    -  기본 특징
      - 고정된 상수 집합: enum은 미리 정의된 상수 값들만 가질 수 있습니다.
      - 타입 안전: 상수를 문자열이나 정수로 직접 관리하는 대신, 컴파일 타임에 타입을 검사하여 안전성을 보장합니다.
      - 클래스와 유사: enum은 내부에 필드, 메서드 등을 포함할 수 있는 특별한 클래스입니다.
      - 자동 생성: 정의된 상수 값들은 자동으로 static final로 관리됩니다.
      - 코드 가독성: enum을 사용하면 코드에서 상수의 의미를 명확히 알 수 있습니다.
      - 유지보수성: 값의 범위를 enum으로 고정하면 변경 사항이 적고 유지보수가 용이합니다.
---

<br>

### 새로 알게 된 키워드
enum, domain
---


<br>

### 느낀점

---
